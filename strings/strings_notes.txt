-- ASCII
    - Numerical codes for all characters in English language

    - allows computers to intepret characters and letters.

        A = 65  a = 97   0 = 48
        B = 66  b = 98   1 = 49
        C = 67  c = 99   2 = 50
        ...     ...      ...
        Z = 90  z = 122  9 = 57

    - 128 characters codes in total

    - one byte of memory, 7 bit

-- UNICODE
    - for all languages

    - take 2 bytes of memory, 16 bit

-- characters in C:
     char temp;
     temp = 'A'; 

     - chars have to be single quotes

     cout << char; // prints A

     - char array:

        - just like normal arrays

        char arr[2] = {'A','B'};

        char arr[] = {'A','B'};

        char arr[5] = {65, 66}; //using ASCII code, not in quotes

        - all three declarations create the same array.

-- Strings (in C):

    char name[10] = {'J','o','h','n','\0'} // \0 is the string delimiter, marks end of string
    
    char name = {'J','o','h','n','\0'}
    
    char name[] = "John" // compiler creates the array for you, double quotes

    char *name = "John" //created in heap
 
   -string type in C++ is still a char array, it just handles char array for you







    
    

    

    
